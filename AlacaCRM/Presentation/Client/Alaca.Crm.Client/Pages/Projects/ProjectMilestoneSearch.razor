@page "/gantt"
@using Smart.Blazor
@inject IProjectMilestoneService _projectMilestoneService
<style>
    smart-gantt-chart {
        height: auto;
    }

        smart-gantt-chart .product-team {
            --smart-gantt-chart-task-color: rgb(94, 99, 181);
            --smart-gantt-chart-task-label-color: white;
            --smart-gantt-chart-task-label-color-selected: white;
        }

        smart-gantt-chart .marketing-team {
            --smart-gantt-chart-task-color: rgb(43, 195, 190);
        }

        smart-gantt-chart .dev-team {
            --smart-gantt-chart-task-color: rgb(242, 115, 112);
            --smart-gantt-chart-task-label-color: white;
            --smart-gantt-chart-task-label-color-selected: white;
        }

        smart-gantt-chart .design-team {
            --smart-gantt-chart-task-color: rgb(255, 197, 53);
        }

        smart-gantt-chart .qa-team {
            --smart-gantt-chart-task-color: rgb(99, 181, 144);
        }

        smart-gantt-chart .release-team {
            --smart-gantt-chart-task-color: rgb(188, 150, 223);
            --smart-gantt-chart-task-label-color: white;
        }
</style>
<GanttChart DataSource="Data" TaskColumns="taskColumns" DurationUnit="Duration.Hour">
</GanttChart>
@code {

    List<GanttChartTaskColumn> taskColumns = new List<GanttChartTaskColumn>{
        new GanttChartTaskColumn() {
            Label = "Task",
            Value = "label",
            Size = "60%"
        },
        new GanttChartTaskColumn() {
            Label = "Süre (saat)",
            Value = "duration"
        }
    };
    public List<GanttDataRecord> Data { get; set; } = new List<GanttDataRecord>();
    protected override async Task OnInitializedAsync()
    {
        Data = await _projectMilestoneService.GetByGanttDataRecord();
    }
}